{"version":3,"sources":["github-logo.svg","RangeSlider/SliderWireframe/SliderWireframe.js","RangeSlider/utils/array.js","RangeSlider/SelectedRange/SelectedRange.js","RangeSlider/Handle/Handle.js","RangeSlider/RangeSlider.js","Demo.js","index.js"],"names":["module","exports","__webpack_require__","p","Wireframe","_ref","min","max","valuePerStep","formatLabel","labelMarkStep","rangeUnits","start","end","step","arguments","length","undefined","range","i","push","makeRange","lastUnit","isFirstStep","react_default","a","createElement","Fragment","map","unit","islabelMarkStep","className","classNames","first","defaultProps","SelectedRange","cursorShift","grab","selectedRange","target","cursorX","pageX","onChangeStart","_this","props","selectedRangeLeft","getBoundingClientRect","left","document","addEventListener","move","release","_ref2","cursorPageValue","_this$props","normalizedRange","onChange","normalizeValue","pagePositionToNormalizedValue","normalizedRangeLength","newNormalizedRangeStart","newNormalizedRangeEnd","newNormalizedRange","_","clamp","isEqual","removeEventListener","onChangeEnd","_this$props2","this","selectedRangeRef","ref","style","width","onMouseDown","React","Component","Handle","handle","handleLeft","cursorPagePosition","oldValue","normalizedValue","newValue","handleRef","transform","MODE","IDLE","DRAG","RangeSlider","state","mode","handleResize","measureElementsSize","handleChangeStart","switchToDragMode","handleChangeEnd","switchToIdleMode","animateSelectedRangeRounding","finishSelectedRangeRoundingAnimation","classList","remove","startHandle","endHandle","handleStartHandleValueChange","value","normalizedEnd","absoluteValueToNormalized","newSelectedRange","Math","handleSelectedRangeChange","handleEndHandleValueChange","normalizedStart","absoluteRange","normalizedRangeToAbsolute","setState","roundValue","round","normalizedValueToAbsolute","absoluteRangeToNormalized","absoluteValue","position","sliderLeft","sliderWidth","setSliderRef","slider","setSelectedRangeRef","setStartHandleRef","setEndHandleRef","window","nextProps","nextState","stateChanged","propsChanged","_this$slider$getBound","add","setTimeout","_this$props3","getSelectedRange","normalizedSelectedRange","RangeSlider_Handle_Handle","RangeSlider_SelectedRange_SelectedRange","SliderWireframe_SliderWireframe","repoLink","HOUR_SLIDER_RANGE","HALF_HOUR_SLIDER_RANGE","HOUR_QUARTER_SLIDER_RANGE","PRICE_SLIDER_RANGE","YEAR_SLIDER_RANGE","MONTH_SLIDER_RANGE","toPriceLabel","price","concat","toYearLabel","year","months","toMonthLabel","month","toTimeLabel","minutes","hours","floor","minutesRest","Demo","_useState","useState","_useState2","Object","slicedToArray","hourSelectedRange","setHourSelectedRange","_useState3","_useState4","halfHourSelectedRange","setHalfHourSelectedRange","_useState5","_useState6","hourQuarterSelectedRange","setHourQuarterSelectedRange","_useState7","_useState8","priceSelectedRange","setPriceSelectedRange","_useState9","_useState10","yearSelectedRange","setYearSelectedRange","_useState11","_useState12","monthSelectedRange","setMonthSelectedRange","href","src","githubLogo","src_RangeSlider_RangeSlider","ReactDOM","render","src_Demo","getElementById"],"mappings":"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","file":"static/js/main.6f890797.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.76d344f0.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { range as makeRange } from '../utils/array';\r\n\r\nimport './SliderWireframe.scss';\r\n\r\nfunction Wireframe({ min, max, valuePerStep, formatLabel, labelMarkStep }) {\r\n  const rangeUnits = makeRange(min, max, valuePerStep);\r\n  const lastUnit = max;\r\n\r\n  const islabelMarkStep = step => step % labelMarkStep === 0;\r\n  const isFirstStep = step => step === 0;\r\n\r\n  return (\r\n    <>\r\n      {rangeUnits.map((unit, step) =>\r\n        islabelMarkStep(step) ? (\r\n          <div className='time-interval-with-mark-box'>\r\n            <p className={classNames('mark-label', { first: isFirstStep(step) })}>\r\n              {formatLabel(unit)}\r\n            </p>\r\n            <div\r\n              className={classNames('time-interval with-mark', {\r\n                first: isFirstStep(step),\r\n              })}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className={classNames('time-interval')} />\r\n        ),\r\n      )}\r\n      <div className='invisible-time-interval-with-mark-box'>\r\n        <p className='mark-label last'>{formatLabel(lastUnit)}</p>\r\n        <div className={classNames('invisible-time-interval with-mark')} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nWireframe.propTypes = {\r\n  min: PropTypes.number.isRequired,\r\n  max: PropTypes.number.isRequired,\r\n  formatLabel: PropTypes.func.isRequired,\r\n  valuePerStep: PropTypes.number.isRequired,\r\n  labelMarkStep: PropTypes.number,\r\n};\r\n\r\nWireframe.defaultProps = {\r\n  labelMarkStep: 4,\r\n};\r\n\r\nexport default Wireframe;\r\n","function range(start, end, step = 1) {\r\n  const range = [];\r\n  for (let i = start; i < end; i += step) {\r\n    range.push(i);\r\n  }\r\n  return range;\r\n}\r\n\r\nexport { range };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport './SelectedRange.scss';\r\n\r\nconst CSS_UNIT = '%';\r\n\r\nclass SelectedRange extends React.Component {\r\n  static propTypes = {\r\n    normalizedRange: PropTypes.shape({\r\n      start: PropTypes.number.isRequired,\r\n      end: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n    pagePositionToNormalizedValue: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    onChangeStart: PropTypes.func,\r\n    onChangeEnd: PropTypes.func,\r\n    selectedRangeRef: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    onChangeStart: () => {},\r\n    onChangeEnd: () => {},\r\n    selectedRangeRef: null,\r\n  };\r\n\r\n  cursorShift = null;\r\n\r\n  grab = ({ target: selectedRange, pageX: cursorX }) => {\r\n    const { onChangeStart } = this.props;\r\n\r\n    const selectedRangeLeft = selectedRange.getBoundingClientRect().left;\r\n    this.cursorShift = cursorX - selectedRangeLeft;\r\n\r\n    document.addEventListener('mousemove', this.move);\r\n    document.addEventListener('mouseup', this.release);\r\n\r\n    onChangeStart();\r\n  };\r\n\r\n  move = ({ pageX: cursorPageValue }) => {\r\n    const { normalizedRange, onChange } = this.props;\r\n    const { pagePositionToNormalizedValue: normalizeValue } = this.props;\r\n\r\n    const normalizedRangeLength = normalizedRange.end - normalizedRange.start;\r\n\r\n    const newNormalizedRangeStart = normalizeValue(cursorPageValue - this.cursorShift);\r\n    const newNormalizedRangeEnd = newNormalizedRangeStart + normalizedRangeLength;\r\n\r\n    const newNormalizedRange = {\r\n      start: _.clamp(newNormalizedRangeStart, 0, 1 - normalizedRangeLength),\r\n      end: _.clamp(newNormalizedRangeEnd, normalizedRangeLength, 1),\r\n    };\r\n\r\n    if (!_.isEqual(newNormalizedRange, normalizedRange)) {\r\n      onChange(newNormalizedRange);\r\n    }\r\n  };\r\n\r\n  release = () => {\r\n    document.removeEventListener('mousemove', this.move);\r\n    document.removeEventListener('mouseup', this.release);\r\n\r\n    const { onChangeEnd } = this.props;\r\n    onChangeEnd();\r\n  };\r\n\r\n  render() {\r\n    const { normalizedRange, selectedRangeRef } = this.props;\r\n    return (\r\n      <div\r\n        ref={selectedRangeRef}\r\n        className='selected-range'\r\n        style={{\r\n          left: normalizedRange.start * 100 + CSS_UNIT,\r\n          width: (normalizedRange.end - normalizedRange.start) * 100 + CSS_UNIT,\r\n        }}\r\n        onMouseDown={this.grab}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectedRange;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport './Handle.scss';\r\n\r\nconst CSS_UNIT = '%';\r\n\r\nclass Handle extends React.Component {\r\n  static propTypes = {\r\n    normalizedValue: PropTypes.number.isRequired,\r\n    pagePositionToNormalizedValue: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    onChangeStart: PropTypes.func,\r\n    onChangeEnd: PropTypes.func,\r\n    handleRef: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    onChangeStart: () => {},\r\n    onChangeEnd: () => {},\r\n    handleRef: null,\r\n  };\r\n\r\n  cursorShift = null;\r\n\r\n  grab = ({ target: handle, pageX: cursorX }) => {\r\n    const { onChangeStart } = this.props;\r\n\r\n    const handleLeft = handle.getBoundingClientRect().left;\r\n    this.cursorShift = cursorX - handleLeft;\r\n\r\n    document.addEventListener('mousemove', this.move);\r\n    document.addEventListener('mouseup', this.release);\r\n\r\n    onChangeStart();\r\n  };\r\n\r\n  move = ({ pageX: cursorPagePosition }) => {\r\n    const { normalizedValue: oldValue, onChange } = this.props;\r\n    const { pagePositionToNormalizedValue: normalizeValue } = this.props;\r\n\r\n    const normalizedValue = normalizeValue(cursorPagePosition - this.cursorShift);\r\n    const newValue = _.clamp(normalizedValue, 0, 1);\r\n\r\n    if (newValue !== oldValue) {\r\n      onChange(newValue);\r\n    }\r\n  };\r\n\r\n  release = () => {\r\n    document.removeEventListener('mousemove', this.move);\r\n    document.removeEventListener('mouseup', this.release);\r\n\r\n    const { onChangeEnd } = this.props;\r\n    onChangeEnd();\r\n  };\r\n\r\n  render() {\r\n    const { handleRef, normalizedValue } = this.props;\r\n    return (\r\n      <div\r\n        className='slider-handle'\r\n        ref={handleRef}\r\n        style={{\r\n          left: normalizedValue * 100 + CSS_UNIT,\r\n          transform: 'translateX(-50%)',\r\n        }}\r\n        onMouseDown={this.grab}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHandle.propTypes = {};\r\n\r\nexport default Handle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\n\r\nimport { SliderWireframe } from './SliderWireframe';\r\nimport { SelectedRange } from './SelectedRange';\r\nimport { Handle } from './Handle';\r\n\r\nimport './RangeSlider.scss';\r\n\r\nconst MODE = {\r\n  IDLE: 0,\r\n  DRAG: 1,\r\n};\r\n\r\nclass RangeSlider extends React.Component {\r\n  static propTypes = {\r\n    min: PropTypes.number.isRequired,\r\n    max: PropTypes.number.isRequired,\r\n    selectedRange: PropTypes.shape({\r\n      start: PropTypes.number.isRequired,\r\n      end: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    formatLabel: PropTypes.func.isRequired,\r\n    valuePerStep: PropTypes.number,\r\n    labelMarkStep: PropTypes.number,\r\n    className: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    valuePerStep: 1,\r\n    labelMarkStep: 4,\r\n    className: '',\r\n  };\r\n\r\n  state = {\r\n    mode: MODE.IDLE,\r\n    selectedRange: {\r\n      start: null,\r\n      end: null,\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.measureElementsSize();\r\n    window.addEventListener('resize', this.handleResize);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    const stateChanged = !_.isEqual(nextState, this.state);\r\n    const propsChanged = !_.isEqual(nextState, this.props);\r\n\r\n    const { mode } = this.state;\r\n    return stateChanged || (propsChanged && mode !== MODE.DRAG);\r\n  }\r\n\r\n  handleResize = () => {\r\n    this.measureElementsSize();\r\n  };\r\n\r\n  measureElementsSize() {\r\n    const { width, left } = this.slider.getBoundingClientRect();\r\n    this.sliderWidth = width;\r\n    this.sliderLeft = left;\r\n  }\r\n\r\n  handleChangeStart = () => {\r\n    this.switchToDragMode();\r\n  };\r\n\r\n  handleChangeEnd = () => {\r\n    this.switchToIdleMode();\r\n    this.animateSelectedRangeRounding();\r\n  };\r\n\r\n  switchToDragMode() {\r\n    const { selectedRange } = this.props;\r\n    this.setState({ mode: MODE.DRAG, selectedRange });\r\n  }\r\n\r\n  switchToIdleMode() {\r\n    this.setState({ mode: MODE.IDLE, selectedRange: null });\r\n  }\r\n\r\n  animateSelectedRangeRounding() {\r\n    this.selectedRange.classList.add('smooth-position-transition');\r\n    this.startHandle.classList.add('smooth-position-transition');\r\n    this.endHandle.classList.add('smooth-position-transition');\r\n\r\n    setTimeout(this.finishSelectedRangeRoundingAnimation, 3000);\r\n  }\r\n\r\n  finishSelectedRangeRoundingAnimation = () => {\r\n    this.selectedRange.classList.remove('smooth-position-transition');\r\n    this.startHandle.classList.remove('smooth-position-transition');\r\n    this.endHandle.classList.remove('smooth-position-transition');\r\n  };\r\n\r\n  handleStartHandleValueChange = value => {\r\n    const { selectedRange } = this.state;\r\n    const normalizedEnd = this.absoluteValueToNormalized(selectedRange.end);\r\n\r\n    const newSelectedRange = {\r\n      start: Math.min(value, normalizedEnd),\r\n      end: Math.max(value, normalizedEnd),\r\n    };\r\n\r\n    this.handleSelectedRangeChange(newSelectedRange);\r\n  };\r\n\r\n  handleEndHandleValueChange = value => {\r\n    const { selectedRange } = this.state;\r\n    const normalizedStart = this.absoluteValueToNormalized(selectedRange.start);\r\n\r\n    const newSelectedRange = {\r\n      start: Math.min(normalizedStart, value),\r\n      end: Math.max(normalizedStart, value),\r\n    };\r\n\r\n    this.handleSelectedRangeChange(newSelectedRange);\r\n  };\r\n\r\n  handleSelectedRangeChange = normalizedRange => {\r\n    const absoluteRange = this.normalizedRangeToAbsolute(normalizedRange);\r\n    this.setState({ selectedRange: absoluteRange });\r\n\r\n    const { onChange } = this.props;\r\n    const roundedAbsoluteRange = {\r\n      start: this.roundValue(absoluteRange.start),\r\n      end: this.roundValue(absoluteRange.end),\r\n    };\r\n\r\n    onChange(roundedAbsoluteRange);\r\n  };\r\n\r\n  roundValue = value => {\r\n    const { valuePerStep } = this.props;\r\n    return Math.round(value / valuePerStep) * valuePerStep;\r\n  };\r\n\r\n  normalizedRangeToAbsolute = absoluteRange => ({\r\n    start: this.normalizedValueToAbsolute(absoluteRange.start),\r\n    end: this.normalizedValueToAbsolute(absoluteRange.end),\r\n  });\r\n\r\n  absoluteRangeToNormalized = absoluteRange => ({\r\n    start: this.absoluteValueToNormalized(absoluteRange.start),\r\n    end: this.absoluteValueToNormalized(absoluteRange.end),\r\n  });\r\n\r\n  normalizedValueToAbsolute = normalizedValue => {\r\n    const { min, max } = this.props;\r\n    return normalizedValue * (max - min) + min;\r\n  };\r\n\r\n  absoluteValueToNormalized = absoluteValue => {\r\n    const { min, max } = this.props;\r\n    return (absoluteValue - min) / (max - min);\r\n  };\r\n\r\n  pagePositionToNormalizedValue = position => {\r\n    return (position - this.sliderLeft) / this.sliderWidth;\r\n  };\r\n\r\n  setSliderRef = slider => (this.slider = slider);\r\n\r\n  setSelectedRangeRef = selectedRange => (this.selectedRange = selectedRange);\r\n\r\n  setStartHandleRef = handle => (this.startHandle = handle);\r\n\r\n  setEndHandleRef = handle => (this.endHandle = handle);\r\n\r\n  getSelectedRange() {\r\n    const { mode } = this.state;\r\n    switch (mode) {\r\n      case MODE.IDLE:\r\n        return this.props.selectedRange;\r\n      case MODE.DRAG:\r\n        return this.state.selectedRange;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { min, max, formatLabel, valuePerStep, labelMarkStep, className } = this.props;\r\n\r\n    const selectedRange = this.getSelectedRange();\r\n    const normalizedSelectedRange = this.absoluteRangeToNormalized(selectedRange);\r\n\r\n    return (\r\n      <div ref={this.setSliderRef} className={classNames('slider-box', className)}>\r\n        <Handle\r\n          handleRef={this.setStartHandleRef}\r\n          normalizedValue={normalizedSelectedRange.start}\r\n          onChange={this.handleStartHandleValueChange}\r\n          onChangeStart={this.handleChangeStart}\r\n          onChangeEnd={this.handleChangeEnd}\r\n          pagePositionToNormalizedValue={this.pagePositionToNormalizedValue}\r\n        />\r\n        <Handle\r\n          handleRef={this.setEndHandleRef}\r\n          normalizedValue={normalizedSelectedRange.end}\r\n          onChange={this.handleEndHandleValueChange}\r\n          onChangeStart={this.handleChangeStart}\r\n          onChangeEnd={this.handleChangeEnd}\r\n          pagePositionToNormalizedValue={this.pagePositionToNormalizedValue}\r\n        />\r\n        <SelectedRange\r\n          selectedRangeRef={this.setSelectedRangeRef}\r\n          normalizedRange={normalizedSelectedRange}\r\n          onChange={this.handleSelectedRangeChange}\r\n          onChangeStart={this.handleChangeStart}\r\n          onChangeEnd={this.handleChangeEnd}\r\n          pagePositionToNormalizedValue={this.pagePositionToNormalizedValue}\r\n        />\r\n        <SliderWireframe\r\n          min={min}\r\n          max={max}\r\n          selectedRange={selectedRange}\r\n          valuePerStep={valuePerStep}\r\n          labelMarkStep={labelMarkStep}\r\n          formatLabel={formatLabel}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RangeSlider;\r\n","import React, { useState } from 'react';\r\n\r\nimport RangeSlider from './RangeSlider/RangeSlider';\r\n\r\nimport githubLogo from './github-logo.svg';\r\n\r\nimport './Demo.scss';\r\n\r\nconst repoLink = 'https://github.com/TanyaIgnatenko/react-range-slider';\r\n\r\nconst MINUTES_IN_HOUR = 60;\r\nconst HOURS_IN_DAY = 24;\r\n\r\nconst HOUR_SLIDER_RANGE = {\r\n  start: 10 * MINUTES_IN_HOUR,\r\n  end: 26 * MINUTES_IN_HOUR,\r\n};\r\n\r\nconst HALF_HOUR_SLIDER_RANGE = {\r\n  start: 10 * MINUTES_IN_HOUR,\r\n  end: 13.5 * MINUTES_IN_HOUR,\r\n};\r\n\r\nconst HOUR_QUARTER_SLIDER_RANGE = {\r\n  start: 10 * MINUTES_IN_HOUR,\r\n  end: 11.25 * MINUTES_IN_HOUR,\r\n};\r\n\r\nconst PRICE_SLIDER_RANGE = {\r\n  start: 100,\r\n  end: 3000,\r\n};\r\n\r\nconst YEAR_SLIDER_RANGE = {\r\n  start: 2015,\r\n  end: 2020,\r\n};\r\n\r\nconst MONTH_SLIDER_RANGE = {\r\n  start: 1,\r\n  end: 5,\r\n};\r\n\r\nconst toPriceLabel = price => `$${price}`;\r\n\r\nconst toYearLabel = year => year;\r\n\r\nconst months = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n];\r\n\r\nconst toMonthLabel = month => months[month - 1];\r\n\r\nconst toTimeLabel = minutes => {\r\n  const hours = Math.floor(minutes / MINUTES_IN_HOUR) % HOURS_IN_DAY;\r\n  let minutesRest = minutes % MINUTES_IN_HOUR;\r\n  minutesRest = minutesRest < 10 ? `0${minutesRest}` : minutesRest;\r\n  return `${hours}:${minutesRest}`;\r\n};\r\n\r\nfunction Demo() {\r\n  const [hourSelectedRange, setHourSelectedRange] = useState(HOUR_SLIDER_RANGE);\r\n\r\n  const [halfHourSelectedRange, setHalfHourSelectedRange] = useState(HALF_HOUR_SLIDER_RANGE);\r\n\r\n  const [hourQuarterSelectedRange, setHourQuarterSelectedRange] = useState(\r\n    HOUR_QUARTER_SLIDER_RANGE,\r\n  );\r\n\r\n  const [priceSelectedRange, setPriceSelectedRange] = useState(PRICE_SLIDER_RANGE);\r\n\r\n  const [yearSelectedRange, setYearSelectedRange] = useState(YEAR_SLIDER_RANGE);\r\n\r\n  const [monthSelectedRange, setMonthSelectedRange] = useState(MONTH_SLIDER_RANGE);\r\n\r\n  return (\r\n    <div className='app-container'>\r\n      <a href={repoLink} className='app-link-container'>\r\n        <img className='github-icon' src={githubLogo} />\r\n        <h1 className='title'>react-range-slider</h1>\r\n      </a>\r\n\r\n      <div className='usage-examples'>\r\n        <div className='category-examples-container'>\r\n          <h2 className='sub-title'>Price</h2>\r\n          <RangeSlider\r\n            min={PRICE_SLIDER_RANGE.start}\r\n            max={PRICE_SLIDER_RANGE.end}\r\n            valuePerStep={100}\r\n            labelMarkStep={5}\r\n            selectedRange={priceSelectedRange}\r\n            onChange={setPriceSelectedRange}\r\n            formatLabel={toPriceLabel}\r\n            className='range-slider'\r\n          />\r\n        </div>\r\n        <div className='category-examples-container'>\r\n          <h2 className='sub-title'>Years</h2>\r\n          <RangeSlider\r\n            min={YEAR_SLIDER_RANGE.start}\r\n            max={YEAR_SLIDER_RANGE.end}\r\n            valuePerStep={1}\r\n            labelMarkStep={1}\r\n            selectedRange={yearSelectedRange}\r\n            onChange={setYearSelectedRange}\r\n            formatLabel={toYearLabel}\r\n            className='range-slider'\r\n          />\r\n        </div>\r\n\r\n        <div className='category-examples-container'>\r\n          <h2 className='sub-title'>Months</h2>\r\n          <RangeSlider\r\n            min={MONTH_SLIDER_RANGE.start}\r\n            max={MONTH_SLIDER_RANGE.end}\r\n            valuePerStep={1}\r\n            labelMarkStep={1}\r\n            selectedRange={monthSelectedRange}\r\n            onChange={setMonthSelectedRange}\r\n            formatLabel={toMonthLabel}\r\n            className='range-slider'\r\n          />\r\n        </div>\r\n\r\n        <div className='category-examples-container'>\r\n          <h2 className='sub-title'>Time</h2>\r\n          <RangeSlider\r\n            min={HOUR_SLIDER_RANGE.start}\r\n            max={HOUR_SLIDER_RANGE.end}\r\n            valuePerStep={60}\r\n            selectedRange={hourSelectedRange}\r\n            onChange={setHourSelectedRange}\r\n            formatLabel={toTimeLabel}\r\n            className='range-slider'\r\n          />\r\n          <RangeSlider\r\n            min={HALF_HOUR_SLIDER_RANGE.start}\r\n            max={HALF_HOUR_SLIDER_RANGE.end}\r\n            valuePerStep={30}\r\n            labelMarkStep={1}\r\n            selectedRange={halfHourSelectedRange}\r\n            onChange={setHalfHourSelectedRange}\r\n            formatLabel={toTimeLabel}\r\n            className='range-slider'\r\n          />\r\n          <RangeSlider\r\n            min={HOUR_QUARTER_SLIDER_RANGE.start}\r\n            max={HOUR_QUARTER_SLIDER_RANGE.end}\r\n            valuePerStep={15}\r\n            labelMarkStep={1}\r\n            selectedRange={hourQuarterSelectedRange}\r\n            onChange={setHourQuarterSelectedRange}\r\n            formatLabel={toTimeLabel}\r\n            className='range-slider'\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demo;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Demo from './Demo';\r\n\r\nReactDOM.render(<Demo />, document.getElementById('root'));\r\n"],"sourceRoot":""}