{"version":3,"sources":["github-logo.svg","RangeSlider/SliderWireframe/SliderWireframe.js","RangeSlider/utils/array.js","RangeSlider/SelectedRange/SelectedRange.js","RangeSlider/Handle/Handle.js","RangeSlider/RangeSlider.js","Demo.js","index.js"],"names":["module","exports","__webpack_require__","p","Wireframe","_ref","min","max","valuePerStep","formatLabel","labelMarkStep","rangeUnits","start","end","step","arguments","length","undefined","range","i","push","makeRange","lastUnit","isFirstStep","react_default","a","createElement","Fragment","map","unit","islabelMarkStep","className","classNames","first","defaultProps","SelectedRange","cursorShift","grab","selectedRange","target","cursorX","pageX","onChangeStart","_this","props","selectedRangeLeft","getBoundingClientRect","left","document","addEventListener","move","release","_ref2","cursorPageValue","_this$props","normalizedRange","onChange","normalizeValue","pagePositionToNormalizedValue","normalizedRangeLength","newNormalizedRangeStart","newNormalizedRangeEnd","newNormalizedRange","_","clamp","isEqual","removeEventListener","onChangeEnd","_this$props2","this","selectedRangeRef","selectedRangeStart","Math","selectedRangeLength","abs","ref","style","width","onMouseDown","React","Component","Handle","handle","name","handleLeft","cursorPagePosition","oldValue","normalizedValue","newValue","_this$props3","_this$props4","handleRef","transform","MODE","IDLE","DRAG","RangeSlider","state","mode","firstHandleName","secondHandleName","handlesSwappedWhileDrag","handleResize","measureElementsSize","handleChangeStart","switchToDragMode","handleChangeEnd","switchToIdleMode","animateSelectedRangeRounding","finishSelectedRangeRoundingAnimation","classList","remove","firstHandle","secondHandle","handleHandleValueChange","value","absoluteRangeToNormalized","handleSelectedRangeChange","handleHandleChangeEnd","_ref3","absoluteRange","normalizedRangeToAbsolute","setState","roundValue","round","normalizedValueToAbsolute","absoluteValueToNormalized","absoluteValue","position","sliderLeft","sliderWidth","setSliderRef","slider","setSelectedRangeRef","setFirstHandleRef","setSecondHandleRef","window","nextProps","nextState","stateChanged","propsChanged","_this$slider$getBound","add","setTimeout","getSelectedRange","normalizedSelectedRange","RangeSlider_Handle_Handle","RangeSlider_SelectedRange_SelectedRange","SliderWireframe_SliderWireframe","repoLink","HOUR_SLIDER_RANGE","HALF_HOUR_SLIDER_RANGE","HOUR_QUARTER_SLIDER_RANGE","PRICE_SLIDER_RANGE","YEAR_SLIDER_RANGE","MONTH_SLIDER_RANGE","toPriceLabel","price","concat","toYearLabel","year","months","toMonthLabel","month","toTimeLabel","minutes","hours","floor","minutesRest","Demo","_useState","useState","_useState2","Object","slicedToArray","hourSelectedRange","setHourSelectedRange","_useState3","_useState4","halfHourSelectedRange","setHalfHourSelectedRange","_useState5","_useState6","hourQuarterSelectedRange","setHourQuarterSelectedRange","_useState7","_useState8","priceSelectedRange","setPriceSelectedRange","_useState9","_useState10","yearSelectedRange","setYearSelectedRange","_useState11","_useState12","monthSelectedRange","setMonthSelectedRange","href","src","githubLogo","src_RangeSlider_RangeSlider","ReactDOM","render","src_Demo","getElementById"],"mappings":"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","file":"static/js/main.230f2da7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.76d344f0.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { range as makeRange } from '../utils/array';\r\n\r\nimport './SliderWireframe.scss';\r\n\r\nfunction Wireframe({ min, max, valuePerStep, formatLabel, labelMarkStep }) {\r\n  const rangeUnits = makeRange(min, max, valuePerStep);\r\n  const lastUnit = max;\r\n\r\n  const islabelMarkStep = step => step % labelMarkStep === 0;\r\n  const isFirstStep = step => step === 0;\r\n\r\n  return (\r\n    <>\r\n      {rangeUnits.map((unit, step) =>\r\n        islabelMarkStep(step) ? (\r\n          <div className='time-interval-with-mark-box'>\r\n            <p className={classNames('mark-label', { first: isFirstStep(step) })}>\r\n              {formatLabel(unit)}\r\n            </p>\r\n            <div\r\n              className={classNames('time-interval with-mark', {\r\n                first: isFirstStep(step),\r\n              })}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className={classNames('time-interval')} />\r\n        ),\r\n      )}\r\n      <div className='invisible-time-interval-with-mark-box'>\r\n        <p className='mark-label last'>{formatLabel(lastUnit)}</p>\r\n        <div className={classNames('invisible-time-interval with-mark')} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nWireframe.propTypes = {\r\n  min: PropTypes.number.isRequired,\r\n  max: PropTypes.number.isRequired,\r\n  formatLabel: PropTypes.func.isRequired,\r\n  valuePerStep: PropTypes.number.isRequired,\r\n  labelMarkStep: PropTypes.number,\r\n};\r\n\r\nWireframe.defaultProps = {\r\n  labelMarkStep: 4,\r\n};\r\n\r\nexport default Wireframe;\r\n","function range(start, end, step = 1) {\r\n  const range = [];\r\n  for (let i = start; i < end; i += step) {\r\n    range.push(i);\r\n  }\r\n  return range;\r\n}\r\n\r\nexport { range };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport './SelectedRange.scss';\r\n\r\nconst CSS_UNIT = '%';\r\n\r\nclass SelectedRange extends React.Component {\r\n  static propTypes = {\r\n    normalizedRange: PropTypes.shape({\r\n      start: PropTypes.number.isRequired,\r\n      end: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n    pagePositionToNormalizedValue: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    onChangeStart: PropTypes.func,\r\n    onChangeEnd: PropTypes.func,\r\n    selectedRangeRef: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    onChangeStart: () => {},\r\n    onChangeEnd: () => {},\r\n    selectedRangeRef: null,\r\n  };\r\n\r\n  cursorShift = null;\r\n\r\n  grab = ({ target: selectedRange, pageX: cursorX }) => {\r\n    const { onChangeStart } = this.props;\r\n\r\n    const selectedRangeLeft = selectedRange.getBoundingClientRect().left;\r\n    this.cursorShift = cursorX - selectedRangeLeft;\r\n\r\n    document.addEventListener('mousemove', this.move);\r\n    document.addEventListener('mouseup', this.release);\r\n\r\n    onChangeStart();\r\n  };\r\n\r\n  move = ({ pageX: cursorPageValue }) => {\r\n    const { normalizedRange, onChange } = this.props;\r\n    const { pagePositionToNormalizedValue: normalizeValue } = this.props;\r\n\r\n    const normalizedRangeLength = normalizedRange.end - normalizedRange.start;\r\n\r\n    const newNormalizedRangeStart = normalizeValue(cursorPageValue - this.cursorShift);\r\n    const newNormalizedRangeEnd = newNormalizedRangeStart + normalizedRangeLength;\r\n\r\n    const newNormalizedRange = {\r\n      start: _.clamp(newNormalizedRangeStart, 0, 1 - normalizedRangeLength),\r\n      end: _.clamp(newNormalizedRangeEnd, normalizedRangeLength, 1),\r\n    };\r\n\r\n    if (!_.isEqual(newNormalizedRange, normalizedRange)) {\r\n      onChange(newNormalizedRange);\r\n    }\r\n  };\r\n\r\n  release = () => {\r\n    document.removeEventListener('mousemove', this.move);\r\n    document.removeEventListener('mouseup', this.release);\r\n\r\n    const { onChangeEnd } = this.props;\r\n    onChangeEnd();\r\n  };\r\n\r\n  render() {\r\n    const { normalizedRange, selectedRangeRef } = this.props;\r\n\r\n    const selectedRangeStart = Math.min(normalizedRange.start, normalizedRange.end);\r\n    const selectedRangeLength = Math.abs(normalizedRange.end - normalizedRange.start);\r\n\r\n    return (\r\n      <div\r\n        ref={selectedRangeRef}\r\n        className='selected-range'\r\n        style={{\r\n          left: selectedRangeStart * 100 + CSS_UNIT,\r\n          width: selectedRangeLength * 100 + CSS_UNIT,\r\n        }}\r\n        onMouseDown={this.grab}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectedRange;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport './Handle.scss';\r\n\r\nconst CSS_UNIT = '%';\r\n\r\nclass Handle extends React.Component {\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    normalizedValue: PropTypes.number.isRequired,\r\n    pagePositionToNormalizedValue: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    onChangeStart: PropTypes.func,\r\n    onChangeEnd: PropTypes.func,\r\n    handleRef: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    onChangeStart: () => {},\r\n    onChangeEnd: () => {},\r\n    handleRef: null,\r\n  };\r\n\r\n  cursorShift = null;\r\n\r\n  grab = ({ target: handle, pageX: cursorX }) => {\r\n    const { onChangeStart, name } = this.props;\r\n\r\n    const handleLeft = handle.getBoundingClientRect().left;\r\n    this.cursorShift = cursorX - handleLeft;\r\n\r\n    document.addEventListener('mousemove', this.move);\r\n    document.addEventListener('mouseup', this.release);\r\n\r\n    onChangeStart(name);\r\n  };\r\n\r\n  move = ({ pageX: cursorPagePosition }) => {\r\n    const { normalizedValue: oldValue, onChange, name } = this.props;\r\n    const { pagePositionToNormalizedValue: normalizeValue } = this.props;\r\n\r\n    const normalizedValue = normalizeValue(cursorPagePosition - this.cursorShift);\r\n    const newValue = _.clamp(normalizedValue, 0, 1);\r\n\r\n    if (newValue !== oldValue) {\r\n      onChange(name, newValue);\r\n    }\r\n  };\r\n\r\n  release = () => {\r\n    document.removeEventListener('mousemove', this.move);\r\n    document.removeEventListener('mouseup', this.release);\r\n\r\n    const { onChangeEnd, name } = this.props;\r\n    onChangeEnd(name);\r\n  };\r\n\r\n  render() {\r\n    const { handleRef, normalizedValue } = this.props;\r\n    return (\r\n      <div\r\n        className='slider-handle'\r\n        ref={handleRef}\r\n        style={{\r\n          left: normalizedValue * 100 + CSS_UNIT,\r\n          transform: 'translateX(-50%)',\r\n        }}\r\n        onMouseDown={this.grab}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHandle.propTypes = {};\r\n\r\nexport default Handle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\n\r\nimport { SliderWireframe } from './SliderWireframe';\r\nimport { SelectedRange } from './SelectedRange';\r\nimport { Handle } from './Handle';\r\n\r\nimport './RangeSlider.scss';\r\n\r\nconst MODE = {\r\n  IDLE: 0,\r\n  DRAG: 1,\r\n};\r\n\r\nclass RangeSlider extends React.Component {\r\n  static propTypes = {\r\n    min: PropTypes.number.isRequired,\r\n    max: PropTypes.number.isRequired,\r\n    selectedRange: PropTypes.shape({\r\n      start: PropTypes.number.isRequired,\r\n      end: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    formatLabel: PropTypes.func.isRequired,\r\n    valuePerStep: PropTypes.number,\r\n    labelMarkStep: PropTypes.number,\r\n    className: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    valuePerStep: 1,\r\n    labelMarkStep: 4,\r\n    className: '',\r\n  };\r\n\r\n  state = {\r\n    mode: MODE.IDLE,\r\n    selectedRange: {\r\n      start: null,\r\n      end: null,\r\n    },\r\n  };\r\n\r\n  firstHandleName = 'start';\r\n  secondHandleName = 'end';\r\n  handlesSwappedWhileDrag = false;\r\n\r\n  componentDidMount() {\r\n    this.measureElementsSize();\r\n    window.addEventListener('resize', this.handleResize);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    const stateChanged = !_.isEqual(nextState, this.state);\r\n    const propsChanged = !_.isEqual(nextState, this.props);\r\n\r\n    const { mode } = this.state;\r\n    return stateChanged || (propsChanged && mode !== MODE.DRAG);\r\n  }\r\n\r\n  handleResize = () => {\r\n    this.measureElementsSize();\r\n  };\r\n\r\n  measureElementsSize() {\r\n    const { width, left } = this.slider.getBoundingClientRect();\r\n    this.sliderWidth = width;\r\n    this.sliderLeft = left;\r\n  }\r\n\r\n  handleChangeStart = () => {\r\n    this.switchToDragMode();\r\n  };\r\n\r\n  handleChangeEnd = () => {\r\n    this.switchToIdleMode();\r\n    this.animateSelectedRangeRounding();\r\n  };\r\n\r\n  switchToDragMode() {\r\n    const { selectedRange } = this.props;\r\n    this.setState({ mode: MODE.DRAG, selectedRange });\r\n  }\r\n\r\n  switchToIdleMode() {\r\n    this.setState({ mode: MODE.IDLE, selectedRange: null });\r\n  }\r\n\r\n  animateSelectedRangeRounding() {\r\n    this.selectedRange.classList.add('smooth-position-transition');\r\n    this.firstHandle.classList.add('smooth-position-transition');\r\n    this.secondHandle.classList.add('smooth-position-transition');\r\n\r\n    setTimeout(this.finishSelectedRangeRoundingAnimation, 3000);\r\n  }\r\n\r\n  finishSelectedRangeRoundingAnimation = () => {\r\n    this.selectedRange.classList.remove('smooth-position-transition');\r\n    this.firstHandle.classList.remove('smooth-position-transition');\r\n    this.secondHandle.classList.remove('smooth-position-transition');\r\n  };\r\n\r\n  handleHandleValueChange = (handle, value) => {\r\n    const { selectedRange } = this.state;\r\n\r\n    const normalizedRange = this.absoluteRangeToNormalized(selectedRange);\r\n    normalizedRange[handle] = value;\r\n\r\n    if (normalizedRange.start > normalizedRange.end) {\r\n      [normalizedRange.start, normalizedRange.end] = [normalizedRange.end, normalizedRange.start];\r\n      [this.firstHandleName, this.secondHandleName] = [this.secondHandleName, this.firstHandleName];\r\n      this.handlesSwappedWhileDrag = !this.handlesSwappedWhileDrag;\r\n    }\r\n\r\n    this.handleSelectedRangeChange(normalizedRange);\r\n  };\r\n\r\n  handleHandleChangeEnd = () => {\r\n    if (this.handlesSwappedWhileDrag) {\r\n      [this.firstHandleName, this.secondHandleName] = [this.secondHandleName, this.firstHandleName];\r\n      this.handlesSwappedWhileDrag = false;\r\n    }\r\n\r\n    this.handleChangeEnd();\r\n  };\r\n\r\n  handleSelectedRangeChange = normalizedRange => {\r\n    const absoluteRange = this.normalizedRangeToAbsolute(normalizedRange);\r\n    this.setState({ selectedRange: absoluteRange });\r\n\r\n    const { onChange } = this.props;\r\n    const roundedRange = {\r\n      start: this.roundValue(absoluteRange.start),\r\n      end: this.roundValue(absoluteRange.end),\r\n    };\r\n\r\n    onChange(roundedRange);\r\n  };\r\n\r\n  roundValue = value => {\r\n    const { valuePerStep } = this.props;\r\n    return Math.round(value / valuePerStep) * valuePerStep;\r\n  };\r\n\r\n  normalizedRangeToAbsolute = absoluteRange => ({\r\n    start: this.normalizedValueToAbsolute(absoluteRange.start),\r\n    end: this.normalizedValueToAbsolute(absoluteRange.end),\r\n  });\r\n\r\n  absoluteRangeToNormalized = absoluteRange => ({\r\n    start: this.absoluteValueToNormalized(absoluteRange.start),\r\n    end: this.absoluteValueToNormalized(absoluteRange.end),\r\n  });\r\n\r\n  normalizedValueToAbsolute = normalizedValue => {\r\n    const { min, max } = this.props;\r\n    return normalizedValue * (max - min) + min;\r\n  };\r\n\r\n  absoluteValueToNormalized = absoluteValue => {\r\n    const { min, max } = this.props;\r\n    return (absoluteValue - min) / (max - min);\r\n  };\r\n\r\n  pagePositionToNormalizedValue = position => {\r\n    return (position - this.sliderLeft) / this.sliderWidth;\r\n  };\r\n\r\n  setSliderRef = slider => (this.slider = slider);\r\n\r\n  setSelectedRangeRef = selectedRange => (this.selectedRange = selectedRange);\r\n\r\n  setFirstHandleRef = handle => (this.firstHandle = handle);\r\n\r\n  setSecondHandleRef = handle => (this.secondHandle = handle);\r\n\r\n  getSelectedRange() {\r\n    const { mode } = this.state;\r\n    switch (mode) {\r\n      case MODE.IDLE:\r\n        return this.props.selectedRange;\r\n      case MODE.DRAG:\r\n        return this.state.selectedRange;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { min, max, formatLabel, valuePerStep, labelMarkStep, className } = this.props;\r\n\r\n    const selectedRange = this.getSelectedRange();\r\n    const normalizedSelectedRange = this.absoluteRangeToNormalized(selectedRange);\r\n\r\n    return (\r\n      <div ref={this.setSliderRef} className={classNames('slider-box', className)}>\r\n        <Handle\r\n          name={this.firstHandleName}\r\n          handleRef={this.setFirstHandleRef}\r\n          normalizedValue={normalizedSelectedRange.start}\r\n          onChange={this.handleHandleValueChange}\r\n          onChangeStart={this.handleChangeStart}\r\n          onChangeEnd={this.handleHandleChangeEnd}\r\n          pagePositionToNormalizedValue={this.pagePositionToNormalizedValue}\r\n        />\r\n        <Handle\r\n          name={this.secondHandleName}\r\n          handleRef={this.setSecondHandleRef}\r\n          normalizedValue={normalizedSelectedRange.end}\r\n          onChange={this.handleHandleValueChange}\r\n          onChangeStart={this.handleChangeStart}\r\n          onChangeEnd={this.handleHandleChangeEnd}\r\n          pagePositionToNormalizedValue={this.pagePositionToNormalizedValue}\r\n        />\r\n        <SelectedRange\r\n          selectedRangeRef={this.setSelectedRangeRef}\r\n          normalizedRange={normalizedSelectedRange}\r\n          onChange={this.handleSelectedRangeChange}\r\n          onChangeStart={this.handleChangeStart}\r\n          onChangeEnd={this.handleChangeEnd}\r\n          pagePositionToNormalizedValue={this.pagePositionToNormalizedValue}\r\n        />\r\n        <SliderWireframe\r\n          min={min}\r\n          max={max}\r\n          selectedRange={selectedRange}\r\n          valuePerStep={valuePerStep}\r\n          labelMarkStep={labelMarkStep}\r\n          formatLabel={formatLabel}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RangeSlider;\r\n","import React, { useState } from 'react';\r\n\r\nimport RangeSlider from './RangeSlider/RangeSlider';\r\n\r\nimport githubLogo from './github-logo.svg';\r\n\r\nimport './Demo.scss';\r\n\r\nconst repoLink = 'https://github.com/TanyaIgnatenko/react-range-slider';\r\n\r\nconst MINUTES_IN_HOUR = 60;\r\nconst HOURS_IN_DAY = 24;\r\n\r\nconst HOUR_SLIDER_RANGE = {\r\n  start: 10 * MINUTES_IN_HOUR,\r\n  end: 26 * MINUTES_IN_HOUR,\r\n};\r\n\r\nconst HALF_HOUR_SLIDER_RANGE = {\r\n  start: 10 * MINUTES_IN_HOUR,\r\n  end: 13.5 * MINUTES_IN_HOUR,\r\n};\r\n\r\nconst HOUR_QUARTER_SLIDER_RANGE = {\r\n  start: 10 * MINUTES_IN_HOUR,\r\n  end: 11.25 * MINUTES_IN_HOUR,\r\n};\r\n\r\nconst PRICE_SLIDER_RANGE = {\r\n  start: 100,\r\n  end: 3000,\r\n};\r\n\r\nconst YEAR_SLIDER_RANGE = {\r\n  start: 2015,\r\n  end: 2020,\r\n};\r\n\r\nconst MONTH_SLIDER_RANGE = {\r\n  start: 1,\r\n  end: 5,\r\n};\r\n\r\nconst toPriceLabel = price => `$${price}`;\r\n\r\nconst toYearLabel = year => year;\r\n\r\nconst months = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n];\r\n\r\nconst toMonthLabel = month => months[month - 1];\r\n\r\nconst toTimeLabel = minutes => {\r\n  const hours = Math.floor(minutes / MINUTES_IN_HOUR) % HOURS_IN_DAY;\r\n  let minutesRest = minutes % MINUTES_IN_HOUR;\r\n  minutesRest = minutesRest < 10 ? `0${minutesRest}` : minutesRest;\r\n  return `${hours}:${minutesRest}`;\r\n};\r\n\r\nfunction Demo() {\r\n  const [hourSelectedRange, setHourSelectedRange] = useState(HOUR_SLIDER_RANGE);\r\n\r\n  const [halfHourSelectedRange, setHalfHourSelectedRange] = useState(HALF_HOUR_SLIDER_RANGE);\r\n\r\n  const [hourQuarterSelectedRange, setHourQuarterSelectedRange] = useState(\r\n    HOUR_QUARTER_SLIDER_RANGE,\r\n  );\r\n\r\n  const [priceSelectedRange, setPriceSelectedRange] = useState(PRICE_SLIDER_RANGE);\r\n\r\n  const [yearSelectedRange, setYearSelectedRange] = useState(YEAR_SLIDER_RANGE);\r\n\r\n  const [monthSelectedRange, setMonthSelectedRange] = useState(MONTH_SLIDER_RANGE);\r\n\r\n  return (\r\n    <div className='app-container'>\r\n      <a href={repoLink} className='app-link-container'>\r\n        <img className='github-icon' src={githubLogo} />\r\n        <h1 className='title'>react-range-slider</h1>\r\n      </a>\r\n\r\n      <div className='usage-examples'>\r\n        <div className='category-examples-container'>\r\n          <h2 className='sub-title'>Price</h2>\r\n          <RangeSlider\r\n            min={PRICE_SLIDER_RANGE.start}\r\n            max={PRICE_SLIDER_RANGE.end}\r\n            valuePerStep={100}\r\n            labelMarkStep={5}\r\n            selectedRange={priceSelectedRange}\r\n            onChange={setPriceSelectedRange}\r\n            formatLabel={toPriceLabel}\r\n            className='range-slider'\r\n          />\r\n        </div>\r\n        <div className='category-examples-container'>\r\n          <h2 className='sub-title'>Years</h2>\r\n          <RangeSlider\r\n            min={YEAR_SLIDER_RANGE.start}\r\n            max={YEAR_SLIDER_RANGE.end}\r\n            valuePerStep={1}\r\n            labelMarkStep={1}\r\n            selectedRange={yearSelectedRange}\r\n            onChange={setYearSelectedRange}\r\n            formatLabel={toYearLabel}\r\n            className='range-slider'\r\n          />\r\n        </div>\r\n\r\n        <div className='category-examples-container'>\r\n          <h2 className='sub-title'>Months</h2>\r\n          <RangeSlider\r\n            min={MONTH_SLIDER_RANGE.start}\r\n            max={MONTH_SLIDER_RANGE.end}\r\n            valuePerStep={1}\r\n            labelMarkStep={1}\r\n            selectedRange={monthSelectedRange}\r\n            onChange={setMonthSelectedRange}\r\n            formatLabel={toMonthLabel}\r\n            className='range-slider'\r\n          />\r\n        </div>\r\n\r\n        <div className='category-examples-container'>\r\n          <h2 className='sub-title'>Time</h2>\r\n          <RangeSlider\r\n            min={HOUR_SLIDER_RANGE.start}\r\n            max={HOUR_SLIDER_RANGE.end}\r\n            valuePerStep={60}\r\n            selectedRange={hourSelectedRange}\r\n            onChange={setHourSelectedRange}\r\n            formatLabel={toTimeLabel}\r\n            className='range-slider'\r\n          />\r\n          <RangeSlider\r\n            min={HALF_HOUR_SLIDER_RANGE.start}\r\n            max={HALF_HOUR_SLIDER_RANGE.end}\r\n            valuePerStep={30}\r\n            labelMarkStep={1}\r\n            selectedRange={halfHourSelectedRange}\r\n            onChange={setHalfHourSelectedRange}\r\n            formatLabel={toTimeLabel}\r\n            className='range-slider'\r\n          />\r\n          <RangeSlider\r\n            min={HOUR_QUARTER_SLIDER_RANGE.start}\r\n            max={HOUR_QUARTER_SLIDER_RANGE.end}\r\n            valuePerStep={15}\r\n            labelMarkStep={1}\r\n            selectedRange={hourQuarterSelectedRange}\r\n            onChange={setHourQuarterSelectedRange}\r\n            formatLabel={toTimeLabel}\r\n            className='range-slider'\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demo;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Demo from './Demo';\r\n\r\nReactDOM.render(<Demo />, document.getElementById('root'));\r\n"],"sourceRoot":""}